-- Unified Control Panel (TP / Spam M1 / Spam 2 / AutoMove / ToggleFire)
-- GUI c·ªë ƒë·ªãnh, ResetOnSpawn = false (gi·ªØ khi respawn), spam c√≥ th·ªÉ ch·∫°y c√πng l√∫c

--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

--// Remote
local remote = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

--// CONFIG: destinations (TP)
local destinations = {
	["kophaiomaidemve"] = Vector3.new(18.37334884643555, 0.37274569272994995, -140.72775268554688),
	["ddumevailn"] = Vector3.new(18.86713409423828, 0.37274569272994995, -114.86202239990234)
}
local buttonNames = {
	["kophaiomaidemve"] = "C·ªïng 2",
	["ddumevailn"] = "C·ªïng 1"
}

--// Spam args (ƒë√£ thay th·∫ø theo y√™u c·∫ßu)
local spamM1_args = {
	{
		{
			buffer.fromstring("\019\000\000\0000201000113686372022\000"),
			game:GetService("Players"):WaitForChild("zpq_xan").Character
		},
		"\019"
	}
}
local spam2_args = {
	{
		{
			buffer.fromstring("\019\000\000\0000201100101186595482\000")
		},
		"\019"
	}
}
-- ToggleFire args template (s·∫Ω g·ªüi true/false)
local function toggleFireArgs(value)
	return {
		{
			value,
			"\024"
		}
	}
end

--// State variables
local spamM1 = false
local spamM1Delay = 0.35 -- theo y√™u c·∫ßu
local spam2 = false
local spam2Delay = 0.65 -- theo y√™u c·∫ßu
local toggleFireEnabled = false
local autoMove = false

-- AutoMove vars
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")
local hrp = character:FindFirstChild("HumanoidRootPart")

local function refreshCharacterRefs()
	character = player.Character
	if character then
		humanoid = character:FindFirstChildOfClass("Humanoid") or character:FindFirstChild("Humanoid")
		hrp = character:FindFirstChild("HumanoidRootPart")
	end
end

player.CharacterAdded:Connect(function(char)
	task.wait(0.1)
	refreshCharacterRefs()
end)

--// HELPERS
local function safeFire(argsTable)
	pcall(function()
		remote:FireServer(unpack(argsTable))
	end)
end

local function teleportTo(name)
	local dest = destinations[name]
	local char = player.Character or player.CharacterAdded:Wait()
	local hrp_local = char:FindFirstChild("HumanoidRootPart")
	local hum = char:FindFirstChildOfClass("Humanoid")
	if hrp_local and dest then
		hrp_local.CFrame = CFrame.new(dest + Vector3.new(0, 5, 0))
		if hum then
			hum:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
end

--// GUI (1 GUI ch√≠nh, c·ªë ƒë·ªãnh v·ªã tr√≠)
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UnifiedControlGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 360, 0, 360)
mainFrame.Position = UDim2.new(0, 20, 0, 150) -- c·ªë ƒë·ªãnh theo y√™u c·∫ßu
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Active = true
mainFrame.Draggable = false -- c·ªë ƒë·ªãnh

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -20, 0, 30)
title.Position = UDim2.new(0, 10, 0, 8)
title.BackgroundTransparency = 1
title.Text = "‚öôÔ∏è Unified Control Panel"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Parent = mainFrame

-- Close button (x√≥a GUI nh∆∞ng gi·ªØ script loops d·ª´ng theo flags)
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 28, 0, 28)
closeBtn.Position = UDim2.new(1, -38, 0, 6)
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeBtn.BackgroundColor3 = Color3.fromRGB(200,0,0)
closeBtn.BorderSizePixel = 0
closeBtn.Parent = mainFrame
closeBtn.MouseButton1Click:Connect(function()
	-- khi ƒë√≥ng GUI, t·∫Øt t·∫•t c·∫£ ho·∫°t ƒë·ªông
	spamM1 = false
	spam2 = false
	autoMove = false
	toggleFireEnabled = false
	screenGui:Destroy()
end)

-- Layout start Y
local y = 50
local function makeSectionLabel(text)
	local lbl = Instance.new("TextLabel")
	lbl.Size = UDim2.new(1, -20, 0, 22)
	lbl.Position = UDim2.new(0, 10, 0, y)
	lbl.BackgroundTransparency = 1
	lbl.Text = text
	lbl.Font = Enum.Font.SourceSansSemibold
	lbl.TextSize = 14
	lbl.TextColor3 = Color3.fromRGB(200,200,200)
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.Parent = mainFrame
	y = y + 24
	return lbl
end

local function makeButton(text, px, py, w, h)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, w, 0, h)
	btn.Position = UDim2.new(0, px, 0, py)
	btn.Text = text
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
	btn.BorderSizePixel = 0
	btn.Parent = mainFrame
	return btn
end

-- ===== TP Section =====
makeSectionLabel("üîÅ Teleport")
local tpX = 10
local tpY = y
for accountName, _ in pairs(destinations) do
	local nameDisplay = buttonNames[accountName] or accountName
	local btn = makeButton("TP: "..nameDisplay, tpX, tpY, 160, 30)
	btn.MouseButton1Click:Connect(function()
		teleportTo(accountName)
	end)
	tpY = tpY + 36
end
y = tpY + 4

-- ===== Spam M1 Section =====
makeSectionLabel("‚ö° Spam M1 (delay 0.35s)")
local spamM1Btn = makeButton("B·∫≠t Spam M1", 10, y, 160, 30)
local spamM1Status = Instance.new("TextLabel")
spamM1Status.Size = UDim2.new(0, 160, 0, 18)
spamM1Status.Position = UDim2.new(0, 180, 0, y + 6)
spamM1Status.BackgroundTransparency = 1
spamM1Status.Text = "T·∫Øt"
spamM1Status.Font = Enum.Font.SourceSans
spamM1Status.TextSize = 14
spamM1Status.TextColor3 = Color3.fromRGB(255,255,255)
spamM1Status.Parent = mainFrame
y = y + 40

spamM1Btn.MouseButton1Click:Connect(function()
	spamM1 = not spamM1
	if spamM1 then
		spamM1Btn.Text = "T·∫Øt Spam M1"
		spamM1Btn.BackgroundColor3 = Color3.fromRGB(200,50,50)
		spamM1Status.Text = "ƒêang ch·∫°y"
	else
		spamM1Btn.Text = "B·∫≠t Spam M1"
		spamM1Btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
		spamM1Status.Text = "T·∫Øt"
	end
end)

-- ===== Spam 2 Section =====
makeSectionLabel("üî• Spam 2 (delay 0.65s)")
local spam2Btn = makeButton("B·∫≠t Spam 2", 10, y, 160, 30)
local spam2Status = Instance.new("TextLabel")
spam2Status.Size = UDim2.new(0, 160, 0, 18)
spam2Status.Position = UDim2.new(0, 180, 0, y + 6)
spam2Status.BackgroundTransparency = 1
spam2Status.Text = "T·∫Øt"
spam2Status.Font = Enum.Font.SourceSans
spam2Status.TextSize = 14
spam2Status.TextColor3 = Color3.fromRGB(255,255,255)
spam2Status.Parent = mainFrame
y = y + 40

spam2Btn.MouseButton1Click:Connect(function()
	spam2 = not spam2
	if spam2 then
		spam2Btn.Text = "T·∫Øt Spam 2"
		spam2Btn.BackgroundColor3 = Color3.fromRGB(200,50,50)
		spam2Status.Text = "ƒêang ch·∫°y"
	else
		spam2Btn.Text = "B·∫≠t Spam 2"
		spam2Btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
		spam2Status.Text = "T·∫Øt"
	end
end)

-- ===== Toggle Fire Section =====
makeSectionLabel("üîò Toggle Fire (g·ª≠i gi√° tr·ªã true/false)")
local toggleFireBtn = makeButton("B·∫≠t ToggleFire", 10, y, 160, 30)
local toggleFireStatus = Instance.new("TextLabel")
toggleFireStatus.Size = UDim2.new(0, 160, 0, 18)
toggleFireStatus.Position = UDim2.new(0, 180, 0, y + 6)
toggleFireStatus.BackgroundTransparency = 1
toggleFireStatus.Text = "T·∫Øt"
toggleFireStatus.Font = Enum.Font.SourceSans
toggleFireStatus.TextSize = 14
toggleFireStatus.TextColor3 = Color3.fromRGB(255,255,255)
toggleFireStatus.Parent = mainFrame
y = y + 40

toggleFireBtn.MouseButton1Click:Connect(function()
	toggleFireEnabled = not toggleFireEnabled
	if toggleFireEnabled then
		toggleFireBtn.Text = "T·∫Øt ToggleFire"
		toggleFireBtn.BackgroundColor3 = Color3.fromRGB(200,50,50)
		toggleFireStatus.Text = "ƒêang ON"
		-- g·ª≠i 1 l·∫ßn khi b·∫≠t
		safeFire(toggleFireArgs(true))
	else
		toggleFireBtn.Text = "B·∫≠t ToggleFire"
		toggleFireBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
		toggleFireStatus.Text = "T·∫Øt"
		-- g·ª≠i 1 l·∫ßn khi t·∫Øt
		safeFire(toggleFireArgs(false))
	end
end)

-- ===== Auto Move Section =====
makeSectionLabel("üèÉ Auto Move (nhanh)")
local autoMoveBtn = makeButton("B·∫≠t Auto Move", 10, y, 160, 30)
local autoMoveStatus = Instance.new("TextLabel")
autoMoveStatus.Size = UDim2.new(0, 160, 0, 18)
autoMoveStatus.Position = UDim2.new(0, 180, 0, y + 6)
autoMoveStatus.BackgroundTransparency = 1
autoMoveStatus.Text = "T·∫Øt"
autoMoveStatus.Font = Enum.Font.SourceSans
autoMoveStatus.TextSize = 14
autoMoveStatus.TextColor3 = Color3.fromRGB(255,255,255)
autoMoveStatus.Parent = mainFrame
y = y + 40

autoMoveBtn.MouseButton1Click:Connect(function()
	autoMove = not autoMove
	if autoMove then
		autoMoveBtn.Text = "T·∫Øt Auto Move"
		autoMoveBtn.BackgroundColor3 = Color3.fromRGB(0,200,100)
		autoMoveStatus.Text = "ƒêang ON"
	else
		autoMoveBtn.Text = "B·∫≠t Auto Move"
		autoMoveBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
		autoMoveStatus.Text = "T·∫Øt"
	end
end)

-- Footer info
local footer = Instance.new("TextLabel")
footer.Size = UDim2.new(1, -20, 0, 22)
footer.Position = UDim2.new(0, 10, 1, -30)
footer.BackgroundTransparency = 1
footer.Text = "GUI c·ªë ƒë·ªãnh. Spam c√≥ th·ªÉ ch·∫°y c√πng l√∫c."
footer.Font = Enum.Font.SourceSans
footer.TextSize = 12
footer.TextColor3 = Color3.fromRGB(180,180,180)
footer.TextXAlignment = Enum.TextXAlignment.Left
footer.Parent = mainFrame

--// Loops (non-blocking)
-- Spam M1 loop
task.spawn(function()
	while true do
		if spamM1 then
			pcall(function()
				remote:FireServer(unpack(spamM1_args))
			end)
		end
		task.wait(spamM1Delay)
	end
end)

-- Spam 2 loop
task.spawn(function()
	while true do
		if spam2 then
			pcall(function()
				remote:FireServer(unpack(spam2_args))
			end)
		end
		task.wait(spam2Delay)
	end
end)

-- ToggleFire loop (optional periodic send if you want continuous; currently we only send once on toggle)
-- If you want continuous sending while enabled, uncomment below block:
--[[
task.spawn(function()
	while true do
		if toggleFireEnabled then
			safeFire(toggleFireArgs(true))
		end
		task.wait(1) -- adjust interval if needed
	end
end)
]]

-- AutoMove loop (gi·ªØ nguy√™n logic di chuy·ªÉn nhanh)
task.spawn(function()
	while true do
		if autoMove then
			-- ensure humanoid reference exists
			refreshCharacterRefs()
			if humanoid and humanoid.Parent and humanoid.Health > 0 then
				pcall(function()
					humanoid:Move(Vector3.new(0, 0, -1), true)
				end)
			end
		end
		task.wait(0.05) -- m∆∞·ª£t
	end
end)

-- Ensure GUI persists: recreate minimal GUI if PlayerGui cleared (keeps ResetOnSpawn false but for safety)
-- If PlayerGui gets cleared by game, reparent the GUI back
PlayerGui.ChildAdded:Connect(function(child)
	-- no action needed; screenGui has ResetOnSpawn = false so should persist across respawn
	-- this is left intentionally minimal to avoid conflicts
end)

-- Print debug start
print("UnifiedControlGui loaded. Positions fixed; ResetOnSpawn = false.")
